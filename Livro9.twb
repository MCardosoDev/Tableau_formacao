<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Notas+ (Superstore)' inline='true' name='federated.0sb6tia14qvarx15lpeuu1fnuhps' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore' name='excel-direct.1n7qzok051kc8a0zsiw2w0j7txei'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/DS/Tableau/Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1n7qzok051kc8a0zsiw2w0j7txei' name='Diretores' table='[Diretores$]' type='table'>
          <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
            <column datatype='string' name='Diretores' ordinal='0' />
            <column datatype='string' name='Região' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.1n7qzok051kc8a0zsiw2w0j7txei' name='Notas' table='[Notas$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Linha' ordinal='0' />
              <column datatype='string' name='Número Nota Fiscal' ordinal='1' />
              <column datatype='date' name='Data da Nota Fiscal' ordinal='2' />
              <column datatype='date' name='Data do Envio' ordinal='3' />
              <column datatype='string' name='Modo do Envio' ordinal='4' />
              <column datatype='string' name='Código do Cliente' ordinal='5' />
              <column datatype='string' name='Nome do Cliente' ordinal='6' />
              <column datatype='string' name='Segmento' ordinal='7' />
              <column datatype='string' name='Pais ou Região' ordinal='8' />
              <column datatype='string' name='Cidade' ordinal='9' />
              <column datatype='string' name='Estado' ordinal='10' />
              <column datatype='integer' name='Código Postal' ordinal='11' />
              <column datatype='string' name='Região' ordinal='12' />
              <column datatype='string' name='Código do Produto' ordinal='13' />
              <column datatype='string' name='Categoria' ordinal='14' />
              <column datatype='string' name='Sub Categoria' ordinal='15' />
              <column datatype='string' name='Nome do Produto' ordinal='16' />
              <column datatype='real' name='Vendas' ordinal='17' />
              <column datatype='integer' name='Quantidade' ordinal='18' />
              <column datatype='real' name='Desconto' ordinal='19' />
              <column datatype='real' name='Lucro' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.1n7qzok051kc8a0zsiw2w0j7txei' name='Diretores' table='[Diretores$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Diretores' ordinal='0' />
              <column datatype='string' name='Região' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.1n7qzok051kc8a0zsiw2w0j7txei' name='Recebido' table='[Recebido$]' type='table'>
            <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
              <column datatype='string' name='Recebido' ordinal='0' />
              <column datatype='string' name='Número Nota Fiscal' ordinal='1' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Categoria]' value='[Notas].[Categoria]' />
          <map key='[Cidade]' value='[Notas].[Cidade]' />
          <map key='[Código Postal]' value='[Notas].[Código Postal]' />
          <map key='[Código do Cliente]' value='[Notas].[Código do Cliente]' />
          <map key='[Código do Produto]' value='[Notas].[Código do Produto]' />
          <map key='[Data da Nota Fiscal]' value='[Notas].[Data da Nota Fiscal]' />
          <map key='[Data do Envio]' value='[Notas].[Data do Envio]' />
          <map key='[Desconto]' value='[Notas].[Desconto]' />
          <map key='[Diretores]' value='[Diretores].[Diretores]' />
          <map key='[Estado]' value='[Notas].[Estado]' />
          <map key='[Linha]' value='[Notas].[Linha]' />
          <map key='[Lucro]' value='[Notas].[Lucro]' />
          <map key='[Modo do Envio]' value='[Notas].[Modo do Envio]' />
          <map key='[Nome do Cliente]' value='[Notas].[Nome do Cliente]' />
          <map key='[Nome do Produto]' value='[Notas].[Nome do Produto]' />
          <map key='[Número Nota Fiscal (Recebido)]' value='[Recebido].[Número Nota Fiscal]' />
          <map key='[Número Nota Fiscal]' value='[Notas].[Número Nota Fiscal]' />
          <map key='[Pais ou Região]' value='[Notas].[Pais ou Região]' />
          <map key='[Quantidade]' value='[Notas].[Quantidade]' />
          <map key='[Recebido]' value='[Recebido].[Recebido]' />
          <map key='[Região (Diretores)]' value='[Diretores].[Região]' />
          <map key='[Região]' value='[Notas].[Região]' />
          <map key='[Segmento]' value='[Notas].[Segmento]' />
          <map key='[Sub Categoria]' value='[Notas].[Sub Categoria]' />
          <map key='[Vendas]' value='[Notas].[Vendas]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Notas]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Diretores]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Recebido]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B801:no:A1:B801:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Linha</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Linha]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Linha</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Número Nota Fiscal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Número Nota Fiscal]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Número Nota Fiscal</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data da Nota Fiscal</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data da Nota Fiscal]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Data da Nota Fiscal</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data do Envio</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Data do Envio]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Data do Envio</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Modo do Envio</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Modo do Envio]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Modo do Envio</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Código do Cliente</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Código do Cliente]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Código do Cliente</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nome do Cliente</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Nome do Cliente]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Nome do Cliente</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segmento</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segmento]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Segmento</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pais ou Região</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Pais ou Região]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Pais ou Região</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cidade</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cidade]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Cidade</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estado</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Estado]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Estado</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Código Postal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Código Postal]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Código Postal</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Região</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Região]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Região</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Código do Produto</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Código do Produto]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Código do Produto</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categoria</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Categoria]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Categoria</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub Categoria</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub Categoria]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Sub Categoria</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nome do Produto</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Nome do Produto]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Nome do Produto</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vendas]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Vendas</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantidade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantidade]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Quantidade</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Desconto</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Desconto]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Desconto</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lucro</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lucro]</local-name>
            <parent-name>[Notas]</parent-name>
            <remote-alias>Lucro</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Notas_6908B0599D0E4B6BB891240DF1A3D936]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Diretores</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Diretores]</local-name>
            <parent-name>[Diretores]</parent-name>
            <remote-alias>Diretores</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diretores_D730F69A4E87461C91F6D747202BEBDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Região</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Região (Diretores)]</local-name>
            <parent-name>[Diretores]</parent-name>
            <remote-alias>Região</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Diretores_D730F69A4E87461C91F6D747202BEBDE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recebido</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Recebido]</local-name>
            <parent-name>[Recebido]</parent-name>
            <remote-alias>Recebido</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Recebido_5E56E20959044E1EA9CF8A2FA24BB01D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Número Nota Fiscal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Número Nota Fiscal (Recebido)]</local-name>
            <parent-name>[Recebido]</parent-name>
            <remote-alias>Número Nota Fiscal</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LPT_RBR_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Recebido_5E56E20959044E1EA9CF8A2FA24BB01D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total de Vendas' datatype='real' name='[Calculation_280349104677376000]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='TOTAL(SUM([Vendas]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentual de Vendas' datatype='real' default-format='p0.00%' name='[Calculation_280349104677756929]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Vendas])/TOTAL(SUM([Vendas]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Lookup Max Data' datatype='date' name='[Calculation_280349104678281218]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='LOOKUP(MAX([Data da Nota Fiscal]), 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Max Data' datatype='date' name='[Calculation_280349104678567939]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='MAX([Data da Nota Fiscal])' />
      </column>
      <column caption='Diferenca da Data Lookup' datatype='integer' name='[Calculation_280349104678842372]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, LOOKUP(MAX([Data da Nota Fiscal]), 0), MAKEDATE(2017,12,31))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Orçamento Lookup' datatype='real' name='[Calculation_280349104681676806]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='LOOKUP(SUM([Vendas]),-1) * 1.05'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Orçamento Previous' datatype='real' name='[Calculation_280349104681881607]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='PREVIOUS_VALUE(SUM([Vendas])) * 1.05'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Vendas Running Min' datatype='real' name='[Calculation_280349104683745288]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_MIN(SUM([Vendas]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Vendas Running Max' datatype='real' name='[Calculation_280349104683974665]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_MAX(SUM([Vendas]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Vendas Running Avg' datatype='real' name='[Calculation_280349104684044298]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_AVG(SUM([Vendas]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Cidade]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Código Postal]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Diferenca da Data Max' datatype='integer' name='[Diferenca da Data Lookup (cópia)_280349104679469061]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, MAX([Data da Nota Fiscal]), MAKEDATE(2017,12,31))' />
      </column>
      <column caption='Diretores (Diretores)' datatype='string' name='[Diretores]' role='dimension' type='nominal' />
      <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Recebido (Recebido)' datatype='string' name='[Recebido]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Diretores' datatype='table' name='[__tableau_internal_object_id__].[Diretores_D730F69A4E87461C91F6D747202BEBDE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Notas' datatype='table' name='[__tableau_internal_object_id__].[Notas_6908B0599D0E4B6BB891240DF1A3D936]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Recebido' datatype='table' name='[__tableau_internal_object_id__].[Recebido_5E56E20959044E1EA9CF8A2FA24BB01D]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brasil&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Diretores' id='Diretores_D730F69A4E87461C91F6D747202BEBDE'>
            <properties context=''>
              <relation connection='excel-direct.1n7qzok051kc8a0zsiw2w0j7txei' name='Diretores' table='[Diretores$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Diretores' ordinal='0' />
                  <column datatype='string' name='Região' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Notas' id='Notas_6908B0599D0E4B6BB891240DF1A3D936'>
            <properties context=''>
              <relation connection='excel-direct.1n7qzok051kc8a0zsiw2w0j7txei' name='Notas' table='[Notas$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Linha' ordinal='0' />
                  <column datatype='string' name='Número Nota Fiscal' ordinal='1' />
                  <column datatype='date' name='Data da Nota Fiscal' ordinal='2' />
                  <column datatype='date' name='Data do Envio' ordinal='3' />
                  <column datatype='string' name='Modo do Envio' ordinal='4' />
                  <column datatype='string' name='Código do Cliente' ordinal='5' />
                  <column datatype='string' name='Nome do Cliente' ordinal='6' />
                  <column datatype='string' name='Segmento' ordinal='7' />
                  <column datatype='string' name='Pais ou Região' ordinal='8' />
                  <column datatype='string' name='Cidade' ordinal='9' />
                  <column datatype='string' name='Estado' ordinal='10' />
                  <column datatype='integer' name='Código Postal' ordinal='11' />
                  <column datatype='string' name='Região' ordinal='12' />
                  <column datatype='string' name='Código do Produto' ordinal='13' />
                  <column datatype='string' name='Categoria' ordinal='14' />
                  <column datatype='string' name='Sub Categoria' ordinal='15' />
                  <column datatype='string' name='Nome do Produto' ordinal='16' />
                  <column datatype='real' name='Vendas' ordinal='17' />
                  <column datatype='integer' name='Quantidade' ordinal='18' />
                  <column datatype='real' name='Desconto' ordinal='19' />
                  <column datatype='real' name='Lucro' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Recebido' id='Recebido_5E56E20959044E1EA9CF8A2FA24BB01D'>
            <properties context=''>
              <relation connection='excel-direct.1n7qzok051kc8a0zsiw2w0j7txei' name='Recebido' table='[Recebido$]' type='table'>
                <columns gridOrigin='A1:B801:no:A1:B801:0' header='yes' outcome='6'>
                  <column datatype='string' name='Recebido' ordinal='0' />
                  <column datatype='string' name='Número Nota Fiscal' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Região]' />
              <expression op='[Região (Diretores)]' />
            </expression>
            <first-end-point object-id='Notas_6908B0599D0E4B6BB891240DF1A3D936' />
            <second-end-point object-id='Diretores_D730F69A4E87461C91F6D747202BEBDE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Número Nota Fiscal]' />
              <expression op='[Número Nota Fiscal (Recebido)]' />
            </expression>
            <first-end-point object-id='Notas_6908B0599D0E4B6BB891240DF1A3D936' />
            <second-end-point object-id='Recebido_5E56E20959044E1EA9CF8A2FA24BB01D' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='LOOKUP'>
      <table>
        <view>
          <datasources>
            <datasource caption='Notas+ (Superstore)' name='federated.0sb6tia14qvarx15lpeuu1fnuhps' />
          </datasources>
          <datasource-dependencies datasource='federated.0sb6tia14qvarx15lpeuu1fnuhps'>
            <column caption='Total de Vendas' datatype='real' name='[Calculation_280349104677376000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual de Vendas' datatype='real' default-format='p0.00%' name='[Calculation_280349104677756929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vendas])/TOTAL(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Diferenca da Data Lookup' datatype='integer' name='[Calculation_280349104678842372]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, LOOKUP(MAX([Data da Nota Fiscal]), 0), MAKEDATE(2017,12,31))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Data da Nota Fiscal]' role='dimension' type='ordinal' />
            <column caption='Diferenca da Data Max' datatype='integer' name='[Diferenca da Data Lookup (cópia)_280349104679469061]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, MAX([Data da Nota Fiscal]), MAKEDATE(2017,12,31))' />
            </column>
            <column datatype='string' name='[Nome do Cliente]' role='dimension' type='nominal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Data da Nota Fiscal]' derivation='MY' name='[my:Data da Nota Fiscal:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Nome do Cliente]' derivation='None' name='[none:Nome do Cliente:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da Nota Fiscal]' derivation='Day-Trunc' name='[tdy:Data da Nota Fiscal:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_280349104677376000]' derivation='User' name='[usr:Calculation_280349104677376000:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_280349104677756929]' derivation='User' name='[usr:Calculation_280349104677756929:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_280349104678842372]' derivation='User' name='[usr:Calculation_280349104678842372:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Diferenca da Data Lookup (cópia)_280349104679469061]' derivation='User' name='[usr:Diferenca da Data Lookup (cópia)_280349104679469061:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Vendas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104677376000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104677756929:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Vendas:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104677376000:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Diferenca da Data Lookup (cópia)_280349104679469061:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678842372:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104677756929:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[my:Data da Nota Fiscal:ok]'>
            <groupfilter function='member' level='[my:Data da Nota Fiscal:ok]' member='201712' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678842372:qk:1]' included-values='in-range'>
            <min>0</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[my:Data da Nota Fiscal:ok]</column>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</column>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678842372:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' value='61' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0sb6tia14qvarx15lpeuu1fnuhps].[none:Nome do Cliente:nk] / [federated.0sb6tia14qvarx15lpeuu1fnuhps].[tdy:Data da Nota Fiscal:ok])</rows>
        <cols>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{BA7E79DF-BC62-4568-B5F3-C645D6AC0D5D}' />
    </worksheet>
    <worksheet name='MAX'>
      <table>
        <view>
          <datasources>
            <datasource caption='Notas+ (Superstore)' name='federated.0sb6tia14qvarx15lpeuu1fnuhps' />
          </datasources>
          <datasource-dependencies datasource='federated.0sb6tia14qvarx15lpeuu1fnuhps'>
            <column caption='Total de Vendas' datatype='real' name='[Calculation_280349104677376000]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='TOTAL(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual de Vendas' datatype='real' default-format='p0.00%' name='[Calculation_280349104677756929]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Vendas])/TOTAL(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Diferenca da Data Lookup' datatype='integer' name='[Calculation_280349104678842372]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, LOOKUP(MAX([Data da Nota Fiscal]), 0), MAKEDATE(2017,12,31))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Data da Nota Fiscal]' role='dimension' type='ordinal' />
            <column caption='Diferenca da Data Max' datatype='integer' name='[Diferenca da Data Lookup (cópia)_280349104679469061]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='DATEDIFF(&apos;day&apos;, MAX([Data da Nota Fiscal]), MAKEDATE(2017,12,31))' />
            </column>
            <column datatype='string' name='[Nome do Cliente]' role='dimension' type='nominal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Data da Nota Fiscal]' derivation='MY' name='[my:Data da Nota Fiscal:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Nome do Cliente]' derivation='None' name='[none:Nome do Cliente:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da Nota Fiscal]' derivation='Day-Trunc' name='[tdy:Data da Nota Fiscal:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_280349104677376000]' derivation='User' name='[usr:Calculation_280349104677376000:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_280349104677756929]' derivation='User' name='[usr:Calculation_280349104677756929:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_280349104678842372]' derivation='User' name='[usr:Calculation_280349104678842372:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Diferenca da Data Lookup (cópia)_280349104679469061]' derivation='User' name='[usr:Diferenca da Data Lookup (cópia)_280349104679469061:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Vendas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104677376000:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104677756929:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Vendas:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104677376000:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Diferenca da Data Lookup (cópia)_280349104679469061:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678842372:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104677756929:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[my:Data da Nota Fiscal:ok]'>
            <groupfilter function='member' level='[my:Data da Nota Fiscal:ok]' member='201712' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Diferenca da Data Lookup (cópia)_280349104679469061:qk]' included-values='in-range'>
            <min>0</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[my:Data da Nota Fiscal:ok]</column>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</column>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Diferenca da Data Lookup (cópia)_280349104679469061:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' value='61' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0sb6tia14qvarx15lpeuu1fnuhps].[none:Nome do Cliente:nk] / [federated.0sb6tia14qvarx15lpeuu1fnuhps].[tdy:Data da Nota Fiscal:ok])</rows>
        <cols>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{345D6BB6-9D4F-4E8A-8149-5EE9B9A6A73F}' />
    </worksheet>
    <worksheet name='PREVIOUS'>
      <table>
        <view>
          <datasources>
            <datasource caption='Notas+ (Superstore)' name='federated.0sb6tia14qvarx15lpeuu1fnuhps' />
          </datasources>
          <datasource-dependencies datasource='federated.0sb6tia14qvarx15lpeuu1fnuhps'>
            <column caption='Orçamento Lookup' datatype='real' name='[Calculation_280349104681676806]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='LOOKUP(SUM([Vendas]),-1) * 1.05'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Orçamento Previous' datatype='real' name='[Calculation_280349104681881607]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='PREVIOUS_VALUE(SUM([Vendas])) * 1.05'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Data da Nota Fiscal]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_280349104681676806]' derivation='User' name='[usr:Calculation_280349104681676806:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_280349104681881607]' derivation='User' name='[usr:Calculation_280349104681881607:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Data da Nota Fiscal]' derivation='Year' name='[yr:Data da Nota Fiscal:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Vendas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104681676806:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104681881607:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Vendas:qk]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104681676806:qk:1]&quot;</bucket>
              <bucket>&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104681881607:qk:1]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' value='157' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</rows>
        <cols>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{8DA0B9E1-DCF3-4077-AE70-F7804C4E50BC}' />
    </worksheet>
    <worksheet name='Planilha 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Notas+ (Superstore)' name='federated.0sb6tia14qvarx15lpeuu1fnuhps' />
          </datasources>
          <datasource-dependencies datasource='federated.0sb6tia14qvarx15lpeuu1fnuhps'>
            <column datatype='date' name='[Data da Nota Fiscal]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Quantidade]' role='measure' type='quantitative' />
            <column-instance column='[Quantidade]' derivation='Sum' name='[sum:Quantidade:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da Nota Fiscal]' derivation='Day-Trunc' name='[tdy:Data da Nota Fiscal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da Nota Fiscal]' derivation='Year' name='[yr:Data da Nota Fiscal:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]'>
            <groupfilter function='member' level='[yr:Data da Nota Fiscal:ok]' member='2017' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Quantidade:qk]</rows>
        <cols>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[tdy:Data da Nota Fiscal:qk]</cols>
      </table>
      <simple-id uuid='{A04D7A54-DC1B-4B4F-BAA9-FCB749B9B7C7}' />
    </worksheet>
    <worksheet name='Running'>
      <table>
        <view>
          <datasources>
            <datasource caption='Notas+ (Superstore)' name='federated.0sb6tia14qvarx15lpeuu1fnuhps' />
          </datasources>
          <datasource-dependencies datasource='federated.0sb6tia14qvarx15lpeuu1fnuhps'>
            <column caption='Vendas Running Min' datatype='real' name='[Calculation_280349104683745288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_MIN(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vendas Running Max' datatype='real' name='[Calculation_280349104683974665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_MAX(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vendas Running Avg' datatype='real' name='[Calculation_280349104684044298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_AVG(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Data da Nota Fiscal]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_280349104683745288]' derivation='User' name='[usr:Calculation_280349104683745288:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_280349104683974665]' derivation='User' name='[usr:Calculation_280349104683974665:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_280349104684044298]' derivation='User' name='[usr:Calculation_280349104684044298:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Data da Nota Fiscal]' derivation='Year' name='[yr:Data da Nota Fiscal:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Vendas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104684044298:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104683974665:qk:1]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104683745288:qk:1]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' value='163' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</rows>
        <cols>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{70F50C4A-9D4E-4018-B07A-5561277DE159}' />
    </worksheet>
    <worksheet name='Running Grafico'>
      <table>
        <view>
          <datasources>
            <datasource caption='Notas+ (Superstore)' name='federated.0sb6tia14qvarx15lpeuu1fnuhps' />
          </datasources>
          <datasource-dependencies datasource='federated.0sb6tia14qvarx15lpeuu1fnuhps'>
            <column caption='Vendas Running Min' datatype='real' name='[Calculation_280349104683745288]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_MIN(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vendas Running Max' datatype='real' name='[Calculation_280349104683974665]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_MAX(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Vendas Running Avg' datatype='real' name='[Calculation_280349104684044298]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_AVG(SUM([Vendas]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Data da Nota Fiscal]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Data da Nota Fiscal]' derivation='Month-Trunc' name='[tmn:Data da Nota Fiscal:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_280349104683745288]' derivation='User' name='[usr:Calculation_280349104683745288:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_280349104683974665]' derivation='User' name='[usr:Calculation_280349104683974665:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_280349104684044298]' derivation='User' name='[usr:Calculation_280349104684044298:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[sum:Vendas:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104684044298:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104683974665:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104683745288:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[Multiple Values]</rows>
        <cols>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[tmn:Data da Nota Fiscal:qk]</cols>
      </table>
      <simple-id uuid='{9AFF8DFB-FAD8-4A34-B328-F8131F87D6AA}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Planilha 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[none:Categoria:nk]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[none:Estado:nk]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D01301F-E150-4477-8D80-201F92C2C4D0}' />
    </window>
    <window class='worksheet' name='MAX'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[my:Data da Nota Fiscal:ok]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[none:Nome do Cliente:nk]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678281218:ok:1]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678567939:ok]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0C776570-8F42-4CED-9744-FF39868C2DEC}' />
    </window>
    <window class='worksheet' name='LOOKUP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[my:Data da Nota Fiscal:ok]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[none:Nome do Cliente:nk]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678281218:ok:1]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678567939:ok]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19A099DB-B1D2-49E9-BB0F-46DEE1EE496F}' />
    </window>
    <window class='worksheet' name='PREVIOUS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[my:Data da Nota Fiscal:ok]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[none:Nome do Cliente:nk]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678281218:ok:1]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[usr:Calculation_280349104678567939:ok]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D513BC7-1E65-48A0-BD58-B9F592A1B62C}' />
    </window>
    <window class='worksheet' name='Running'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F8F7E6E-1940-4E75-952C-CF14468C9B4A}' />
    </window>
    <window class='worksheet' maximized='true' name='Running Grafico'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[:Measure Names]</field>
            <field>[federated.0sb6tia14qvarx15lpeuu1fnuhps].[yr:Data da Nota Fiscal:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{462EA57B-2D0B-4D85-92BF-C8C1B119E319}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='LOOKUP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MAX' width='192'>
      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
    </thumbnail>
    <thumbnail height='124' name='PREVIOUS' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Planilha 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO19eYwt2Vnf79Red+3tLf22mTcznjebbWwwxsbGZBxjCCBbGAUrRBApiYRI
      /oqyiP+DRJQECSkCJJREckBxkCGGYHZsHBtsx8bjZWY845l5b96+9HrX2s6SP845datu3Xv7
      3u5+3be76yeNRu92LadO1Xe+7fd9hwghBEqUOKEw9nqBUn5KHGXsWQA45/sxjhIlDgV7FoAS
      JY4ySgEocaJRCkCJE41SAEqcaJQCUOJEoxSAEicapQCUONEoBaDEiUYpACVONEoBKHGiMZUA
      CMGxubUFzhJstdoIey082Gw97LGVKPHQYU1zkKAJWp0eqp6LXreLNk3ABQdfqINzXhLiShxZ
      TCUAnFPcu30LFdfGrZs3sLy8hJAChmFACAHTNB/2OEuUeCgge60HYIyVAlDiyKJ0gkucaJQC
      UOJEoxSAEicapQCUONEoBaDEiUYpACVONEoBKHGiUQpAiRONUgBKnGiUAlDiRKMUgBInGqUA
      lDjRmLIeQIAxBiEEKKXgnIMy9rDHVqLEQ8eU9QARXr16C8s1B/cetOA3PMSxwLNPvUX+vawH
      KHFEMZUAENNBzXcRU4aFegWBYcB3BYQQZXPcEkca0xXE0AiMUZw6cwb9XoDVmoteXBbElDj6
      KAtiSpxolFGgEicapQCUONEoBaDEiUYpACVONEoBKHGiUQpAiRONUgBKnGiUAlDiRKMUgBIn
      GqUAlDjRKAWgxInGVGQ4DcE5YspgmwRMALY10+klSswdZvqCb9+4igfrHdQWa0gSgWeulPUA
      JY42ZhKAlVOncev2GoSxANeW9QBlTUCJo4yZ6NBx2Ec7SNDwLfQTYKFeLenQJY40ynqAEica
      ZRSoxIlGKQAlTjRKAShxolEKQIkTjVIASpxolAJQ4kSjFIASJxqlAJQ40SgFoMSJRikAcwTK
      OL7y8q3DHsaJQikAc4R2L8In/uxbhz2ME4WZBEBwhiAIwWiCKE4e1phOLAiR/5U4OMxEh753
      6wZu3d/CwnIDSSLw9JNPlHToh4ByPg8Os1WEEQJTcFAYsM0BibQsiNkfCCFAUM7nQWImATiz
      eg6W38BizUNAAUIICCElHXqfYJpGOZ8HjJkEwLQcnF5ZAgDYD2U4JxsEckERQoCUzsCBoIwC
      zRm4ECgNoINDKQBzBAEBzkXpAxwgSgGYJwilAcrv/8BQCsAcQQDgXGqBEgeDUgDmCDKnUppA
      B4lSAOYMXHDwUgAODKUAzBGEABgvfYCDRCkAc4QyCnTwKAVgnqCiQKUJdHAoBWCOoKNA5fd/
      cCgFYI6go0ClBjg4zMQFiqMQQRijUvHAOOC5zsMa14kFE6UPcJCYSQAYTfDmtWuoNaqIE4Gn
      ynqAfYVOgnHOyzk9IMxkAnm+h6WV0zCJAdMsraf9hjaBWJkJPjDMuMcRwdnVMwCNEGbqAQyj
      FIb9ACEEXFGhyzk9GMwkAMSwZB2A6cN2H86ATjL0ul9qgINDuczMEbTzy0r7/8BQCsAcQYc/
      GSs1wEGhFIA5go5+lhrg4FAKwBxhYAKVGmBavHTtAf7ya1d3fX4pAHOEgQYoBWBarG33cW+z
      u+vzSwGYIwx8gNIEmhZ7XSpGCsDNqy/ib7/4AsrmhweL0gQ6eBQEQAiBJIlx7dr1wxjPiUbp
      BO8Ge1ssCgIQdrbwwrevol4xSw1wwCg1wC6wx6kqCIDfWMJ73/V2cMdByfU8WHDVG7T0AabH
      Q/EB7t67iVvfvQG6x4uXmA1CAJZplBpgRuxltgoC0G9tYKvDsXJ+GWWL1oOFEAKWZZQ+wAzY
      aw11gQxXaS7jzFITUUAx/Bq21u7ifitCzWJoRwLPXHli1zcuUUSqAUoqxNTgYm+NxAoCIEQE
      Rglsz8dwf+J2p4O43UVnYQVVb1C4UVYw7Q8oo7BMAwmloLQ0QKcBpQyM813P1wg6NMErr7yC
      xtLpgm11/sJFUNzHqaUqupGAYRgQQpT97PcJhBiwTAMAgWXNWKpxUkEI9jJfhbMIcfDWtz2F
      dkgKDoLl+Hj8sUcBAI1d3W7/wTjHRjvA6YXqYQ9lz+ACsC0TtIwCTY299lIdGQUSnGJtbeNI
      9Kl/sNXDf/vMC4c9jH2BEAK2WTrBs2CvXTRGCkCU9HHjuzcKTvA84ji1ERFClGHQGcH32EVj
      pOF05swlnLvcOxJh0OP0rQgBFQY9Rg/1kDHLAsg4TyNtGiM1gO04cG3nSGiA4xSB4toEKn2A
      qTFLGPTz37iOP/7ya7nfCgJAgzZefOV1VJs+Ntfb+zPKh4jjtKOKNIHMUgMM4eU319CPRjPT
      ZjGBOv0YvSDO/VYQgK07N1E7cwm8H2FheV5iPePBGD82O6oMqBClBsjidz/3El69sT7yb9IE
      mu46o7YfLAjAymPP4NGlCt727nfDPwI7dbJj1E58QIXY2/N88q9exFYn3KdRzQnGTMlM3bRH
      HDYiD0BwevXcLEM7VDB+fHZU4QL74gPcfNBGL4yxWPf2aWSHi0nrMOcCYsoFY9RCeeRLItkx
      2lRuv8KgjHMklO3TqOYAEzYNn0UDcIGCv3j0BYAdHw0wEIC9aQDGOKLk+AjAThpg2vdPGQcd
      mtujLwDHKBHG96kegHKB+BgJwCQJmCUKRBkvMG1nEgBOY6ytbyKJQ3T78+FkHSsTCMoJ3qMP
      wBg/VgJAJkiA5AJNdx3KWEG7zkShe3D7FlrCRq+zhYgKPPnE44e+PwClLO2pf9TBGYdJiHTs
      9/A8lHGEcXIs5kRCqIRX8Xk0JX+aZ00oB2Usd+xMGqDSaKBz7y5CXnQmDgvsGG0qJwCYprHn
      uaWcI6bH5eOfDC6mp8NQxkGHTKCZNECt3sSTzz6LimchZvOxP4AuiTsO/fQFpA+w1+dhTCCh
      7FjMCSAXWyEw8nm0DzDNs1LGwXj+2JkEwLBsNOq2PNGe5cy9o9OP4NoWHDtP0WMzZALnHUIA
      pkH2/DyMHy8fgIvxu+bMGgUaPvbILBG/9/nv4Jtv3Cv8Lu2/4yEBQgiYhrHn56HHLAwqP/LR
      Jt3sUaA9OMGHCTZm/1zGjpEPIARM09jz8zAmEB+jRNhEDSCmtwAo4wU2xJHRAICAMSIjyI6V
      BlAm0J7zAEfDBKJsuoYKk8oexQxh8IQWNcCREQDKRqu640SG4yoTvHcNcDRMoF//9Fextt3f
      8TipAR6OCXSEBICDjRSA40WF2KsPoD+Go8AF2u6EUzUAmLR1rHaCpxECSYU4ok6wTngN41hl
      ggVgmWRPCSzOBZwj0lmC8dFmbeG4CVVfs9YEs6E+VkdGAJIxhS/HiQzHlQYYpelmuYZjHw0B
      iBIKNia6k8VkDTBjXfhRZYPqJMYwjpsGMM29mUCMHx0BCGM61bNOorpwMX09AIACse7ICEBC
      +chY8PHzAYjKfO7umbiQJtBRKKyPktFm7TB2SoTta3foeQUdawIdnyiQENImNgyya6HmO2iA
      q3e38MqY+tqDRhTTqajfE00gMZ0fMQ5HSADYGBPo+OQBuJDFTwbZfS4g6wSPkqFXrq/jpWsP
      9jjS/UGUsKkEfRwTFJDPaxjTCsA+lET2+30kUYBOL5j11D0hoWM0wLHiAglFLtyDBlCF9QKj
      uyD0wmQumLxclW3uVQPIOZv2rsXKgpmoEEnYxTe+/QrOnV5CzARqjz8GIQQYe/gx54RxMM4L
      92KMgxAcyBimxfX7bZxdqsK1Z+utJ1e5wTZJzJj9mShlMIhk6lLKYA6tjq1uCN+1Dn2+9OrP
      KNtxLJzLBNao47SQTxM6FhCAyB87kwCsPVgDjfuIkmauaxzZgw02LXT/n+F7cSFgGXLF24st
      uJ/4oy99Fz/53ifxyJnmTOfpZ9AaYDfzyhU12FTXsEheybd7ESzTOJB3NgkxZRACUz0nF1LT
      jz5O/UYm1Y3lD89eZyYBOHfpMs6cvwQIhuQA6wG0CuQjOOG6jhY43LqELJiyvyeN50sv3cS1
      O9v46PufQsWT3HIBeY60aQlevr6OXhDj3c9cGHmN7W6Iz379Gn7qh55OfxMgMA2SRpOGx9Du
      R6hX3EOfK0pl8GLUOx3GTjUf6Xc4QZCE2oAQIOnxwC58ANM0YVoOPPfg9pAUQozkcgNyckxV
      RJJFux8dmnMcU75jHP7WWgdb3QC//NtfwBe/fQNCtXjMOsG319q4u9Ede41+mODFq3mHlnOu
      tMjofEK7F80FTSKrAXbCpDDotOCpAB1BKoQAxtbJcsEVgSz/+298+mu4tXY4vU1jWiy+HgZj
      HD/09kfwSz/7PnzmS6+h048LTnA3iCcKkgAQJvmtgfSLHuVICyHQCWIkc5Aj0D7AtImwSQIw
      jelDGU8thSyORD2AdLRHTwLnOnmU/1s3iA8tQZYkrFB7OgzGOUzDQM13sFT3U46KoVQ55wKd
      fgzPGf+KBBcIorwAMCbnQxbXD8bQ7kX41hv34VjmXISNY0phDI1xHKYSFIGJkkCpFIBhmvjR
      0ABCctzHhUGtESZQFB/eJnMxZTtmYimTphuAdLVO8wAZDTDJXGGcI4iS3LMzzmGaBizLyGmP
      125t4L//yTdQ8525oElEMYPvWlMJo0EwtiJsWgw0wNC193TVA4KAGEt64yOqqIQQCGN6aBni
      hLJCB7JhMM5hqRClXvG1CaSLYjr9yeYKUw2wsh80ZQKWQeBYZm61u3G/hX6USAGYg3YpUULh
      u/ZUH7YxqUhoh5VfgzIO25TRsazWORoCIMO3IyeBc/nCs9864wJhQg9tpYtV5dFrtzbGvjjG
      eKoBTJOkhT2EEFimXL27QQQ6ob0J4xwxzQuA1gCubeaKYm48aOP5d15GveLMBU8oihkqnj2V
      CWSQ8UVC0zKBEqUBzKHmw0dEAORHPtYHGDKBGBeIYnYoG04LIVuSUCbwa5/6CrY6ozPmlMv8
      BSDDuJRyGRIkSAVgWg2Q5DQAh2UYcGwTccZB3uoE+Oj7nsJH3ndlPkyghKIyhQmkCYKTneCd
      VQBlHJZlwDJJTgMeEQEYTxMeVUbIOEcY00PZaIKrkK3ej2ocpAaQL842DSSqPlZrgJgy+Qw7
      CQBlOS2hNYtjW2lhfKj8oZWmj0fOLIzlCe0Xfu/z30GnH008JoyZNIF2EABN7cgeF0QJ/udf
      vTjTmLQPYBpGbmE8EgLAOIdtmWPo0NoJzvzGOKJDMoF0yG6nezMui18AwDI1eU3yWizTQD9M
      4DnWxJWPKyELMw4/5QKWSeBaAxNoo9XHcqOiEkDyuL2RiCfjhdfu4puv3594jNQARROIc+n8
      Z/9tDS1+7V6Ebw1df6fn0QIw3H37SAhAwjhce/TeWVx9SFkTSDrAOJS9thiXDvtO2idLAZAR
      G6YSYVID9MJYrZATNIBayfphkvlNhlelCSQF4NZaGxdOy+2udBZ0piKSGdEPE3z9u3cnHhNp
      DTC0qL1xZwuf+NNvpv/WGj5bJZdQnv/gp3GCqdYAJLc4HQkBoFQKwHgTKJ/06akP4rA1wKQo
      lOACOrOvbX4uBAwoAQgSSVqbcA3G5bz0MhvI6ZUuKwDX77dwKcNL2gvbdBpUPBt3NjoT5z9K
      KCpe0QegjCPJkN5GaQCdRdbzO0sizBxqP38kBCBhHI5dnCyhEiTDDWUH5sPBCwBTzMVE0SHG
      fWjZQg5bOcGaCmGZRsrZmaTFGBeoV9y8BuDaBzBTH+DmgzYunhpseLiXeoOdoCkdvmPtIAAM
      nlM0gcKYIsn4NEJxvbLjDePZzduIMri2Ccswdq8BkijAg/VNJGEfrc7O/Vz2C5TJwY/8mBR3
      RgxpgEbVPZQoEOcCTIg0PDmpm0FqAo1wgrc6IZpVd+KHKgXAyQmAzgNoH0AIgXYvRLPmpscY
      5OFpgDhhcGwTxojsfBYJZfCc4qIWxkku+ZcGOTKLWT9K0sVt2qeIYgrXtmTIOSMAM1EhOE1w
      49p1tE81IahAo7b/9QDX7rVw+WyeRhzHNK1yyt5LiIH6o2zAK+8FEeoVRxZcHDDvPaFMRnFU
      ud+4MXAuADV3pkGQUCpfsgr7bXUCXDrTxJ31zthnoJSh5jvohVF6DKUMhkFgWQaiOEEviOW/
      DZIeQ4g8jln7bwD0whieI82vcRx+QJpArm0U3mk/TNS5g+fRu+bo3/qKI8XUfIEQcDa5Z38Q
      JXBsAwYhuXcyW0EMpSBCht14NpS0T9TaOGH4ld/5In7r3/xk7nfGBVzHLFBiGecg0HUAAzp0
      P6JoKvPhoGm/XACuZaZtXNgYGq/uA2oYBmzLlJ3vABgmgWWa2O6GeNvjZzIsxlH3kiZQENH0
      GN0VwrMtxJRjvR3g1EI1dw3TICn1er8RxirDyzFx7Anl8F0b7V6UOyaKKRLG098EBmFi/VsQ
      UzA20KAEADEm0+GjRC4WlmXkxjWTAPjVOp5+63Nwbemc6YjCfhVXEEIAUSywoVzAtS1ECc39
      jYCk7EmBwXl9ZQLttqhkL6CMw3OttIvFuEIOLgDTkIUpem9gIWTW07akCbRQ80YWAQ2uoUyg
      iOLFaw8AkDQs7DoW4oTh1lobF083c9cwVAHRLHPzh3/zKn74HY+iUXEnHhfGDBXXVhSN8WNP
      KIfnWNjuhrljwoSlPgAhMsNvWSbChKXH6RyPTIARVQwz+TuMEoZTTQuWaebeyUxLgGnZqPge
      TMuCYz+EDQLksxQ0mY4CDTtMIj0nH9brhwnqVfdQokAxleE9Xe86LpHFM7WsOgqU9QG2u9IH
      mNT7lHGhPjaK22sd3F5vF5zgG/dbhco0fb9Z8MJrd9HpTU5uAXLuK54N2zJy0ZxhDGz7/LMF
      ER3jAwzmIYiKSc6dfIEopnAdS2aV5zYRJvRervnHSRgbGwWSkp8Xmn6UoO67h8J5SShDxZXm
      B5+QEBOZbga2acjYdoYK0Q1i1CvuyAVBg3EBz5HaRjvdmgphWwYSKjXA+VP13HmOZSBOZpub
      7W5UqD0YhW4Yo+Y5Mrk3gcekTcCRUaBMG3Np9uZX9iBKlMkooLuG70R8jBIpAJZpzC8VQkCk
      LzELykbnAaQaL0Y1wpiiOiXRar8RK9s2Ub1MdV1AECX4u1fvpMdlw6DZPIDWAKZB4LlWWts7
      CpzxtAdQnEjfTFMhNL+o048LZottmTNVhQkh0OqGCOOdz+kFMaq+1gCTBECagMPPFsaJFBwB
      vH57E7fXOoVSx35Ec8X+0+Q1wpjBs02lAeZUACB0ImRIAKh80cUKJykAZGgFiBKGqm8figmU
      JNIEiikDEwMT6N5mD3/85dfT44bDoJqfo/MArmPBscyJMXumegBpVmiiuh9bphSibpik6f8s
      sjkCYOcND2PK0I+SqWosemGCquekAjgOAiqBOcIEskwCAYG/e/UOXr25URCAIErgu3aaOTcm
      aEmN1ASa50SYgN7JL7/SJIrLXTxhtAkUxRRVzzmURJj0Aay0j5EWws12P8cMFTkNYCoqxEAD
      uLYpBWACF55xrQFUXYAqxDENQ+USAtQrTsE5tC0TSYYq/Su/88VcLmEYvSBRW69OIQCpBjAn
      +gBaA4wygfTH3epFiCmDYSjfUB0TRBQVz04DBGSKxF6YUHjKBErmVQPo4vdRJpBtmQUp105w
      1gQSQiCiMhKxU1niKDDOceN+a5dPoATAsREpe1nbm5vtAK1elDpzuvoLAGxr4AQbSgA8x4Jt
      ybj1ODoE40IGB1hGA2RIXxvtAAs1r3CeY+U1wJv3tid+rL0wBgEpCECcMNxZ7+R+6yoNoP2a
      sVD5jmGtnq3canVDxAktaICEMtg6nKlLSHfyAWIKV4WHs5psrgRARzyGBSChkss9DO0EZydA
      95yXocXZNUCnH+PXP/3V3T0AVIbTtRApe1k/y0YnQJywlKhnZMLHaSYYAxOo5juDAvkxzyFj
      /la6JZKmX2gBiBOGlWalcJ5jGbl9hBPGJm6p1O5FWGn6BQG4tdbGp/765dxvcgW3CiWZw+AY
      TXEXAmkWebsbIUrYwAkWg/8ZakNxwyA7Zp0BaRa7tgXXsXLPMV8CoOzgogZgsE2zQHlNNYAx
      CIMyVSQved+zC8A0an4S4oTDUza2bQ3GsNkOsNL0EUSJWrkG52h7Wb9Dy5ICAEx28Lgiw2kN
      QBlDTCUVQTvSowTAtgdOMGUcUcxSAuEobHdDnFmqFXyAMKYIovx5cnU2J2oAoUr8RmkArQUF
      gFYvRJSJ/2ePsdT19UKykwbQ/pXnzLEG0GbAsPMkTSCjEOwV6kPKTgDn2gYmhe1wpkGnH+3J
      eU4oS5NQXoYQ1g1irC7X0QkG7U80UicYygcwDNQrSgDI+P0CtBOsfYCEyn6b2nk2TWOMBhiY
      QHEiW7j0Mhz8YbR6Ec4s1QpRoDCmOSaqfH7pr2m/ZpRvobWUdvD74aCwX2CgGba7IeJYmkAE
      ec6/FADpH8xC7vMcc341AOU8dYSzSKjyAYaO51zAIPkeOFRVWu1WA3T68WTbdQfEinUYUy0A
      clz9MMG5lTq2OoEad1EA9AMu1n2899mLACZrAJn0klGQSDEktbkoBYlgqeEXzss6wVEiaQU7
      aYCzi9VCHiCMae7jBRQXypJ5CE1tKeR1qFzQ9LP9u9/8y3TOhZBCLTti8IEJpOZLs01l1RxP
      i3ym5fZ5joUwY+7NlwCoD7YQBtUaAGMmMrMChDGF79gq3LUbAdgfDZBkNIDe3ebMUhVbnVCG
      QI1RGkC+50bVxXuekwIwqR5W9gCSfKJA0YgZFzAzvoVjFRv0Sh9AC4AM107UAN0QpxerBRMo
      iJLUp9HQ/o0s6knQj4rdqPX71O9tuxcqUqU0aRzbxGY7wGLdk1Eg9TxfeukWokSalqkGINN2
      05Z/d+2BD/CVl2/NlwDoFPXwCqzDoMPPqO1N2TdG/lHGoW1YBtlVFKjTjwth2FkQK2eLcp7W
      JEihtLBY97HdCdOPRGPwAkWhwHtSPF37O4ZBVAaV5frl//t//nxqSmUh8wDymlFM0ag46E7Q
      AK1ehJVmpZA8C2MqtznKvBht3tmWFIA4YQXfTTJmzcKHGyVM5T8MbLT6WKr7iJOBAHziT7+J
      XhDD1+FMxXydJgqk/5r1Af7wb16dLwFINcDQRDPGYY1YyRKWV6XAgIsy3P5iWrT70R5NIA7P
      kTa41gD9MIHv2VisedjqBgUneNAXqHi9bEb1t/7P17HdDdO/aX/HNIhcyZlQTEd5cV0HXLzm
      wAnuRwlONSsFDZBQht/8g6/hSy/eRKxo1/HQvARKALKaVmsx2zTRC2Vjr8LCpRa0Yds9TGSo
      0rZMrLf6WG76Kg8gl4VWL8J2N4Tn2mnjAO0ETyrxzJqcnooC6THNJAC9zha+/tUX8PrV1/Di
      d747y6lTgTIZ1hr+ALXTNF4DEOjS0l4Yo+LZsvJnl2HQvWy+nVCpAQxjIABbnRCLNQ+Nqpfm
      AkZpAP3xZCE5NfJjvb3exkZ7kExjarXXyTIBkTbHnYRs06x+mODUQjXnA4QxxX/+X19CEFHc
      eNACpRwVz87lDgAgjGhhF/c0mWfJwv6YFktDh30ApkzERBXT2JaJtW1ZyK99gEiFkDfbATzH
      gmkYSBI+MQ9w80FL5oWUYBFCMmFQWbo6Ex2awMC5Ry4iCnqwfDnZnE+33f00iJMEvmMhihNQ
      OrA3E8pgQOUIMr+HUaK6qwkkjIJSim4/gu+YAKTtnT1+GvRCqWLjJM83mRZRQmGpyIRrS2dz
      fbuLxboHxyIIQvVsBOnYhCqj1DyV7JhNA+l8hDHFg80OHjktyW1SMGTbb/0epCaZ/NymIcep
      52up4aEfxuk5r9/awHLDx4+86zH8wRdfVRvvySKf7HX7YYya7yCKE9iqxQvnApwxmATo9mUn
      akoZSMYMiuJE1iRwDqoSeGEcI4hiFUEiuLvewTOXT6neRoMFaW27B9c2lEBooRWglBWe+d/+
      5l/iE7/0EfTDWGbMKYVJkBbcxAmbTQAYS9De3sbZsysIEsUrFwKmOdtOKOMgQOC7NpgQsKzB
      0LgAHMcCCIq/2xZM0wSBAcuyEMQM9YqXHpc9fhpIHpEDEDLzuXpMrmvDMIjqeiCwrWzoqu/K
      uLYh+9Po69u2ygEQAssyc/d1bAtcyLHECcNmJ0r/zqGfXytyAg4Bx7ZH9sHU8ByZJbcsGRFZ
      blTwxp2t9LpBTLHSrGCxUcH9rR5qvgPfdZAwLudaaZgo4Vhq+IgSjoX6YMyWZcFxbPQiVdxi
      GiPfm21baeibCwLGpZPq2hbW2wFOL9QQJxyWaabPuNWNUPUccCE1takK3YmRv4fum5owgYQJ
      eI49+DuRbf4p47OZQPWFFTz55BNoNBZwZnlhllOnAmU85dFkwXR6vGACZaIJGR+g6tkybjyj
      YhJCqvWqv3PDpnFgjMM2sz6AwEY7wFLDTx3WKOPYAZmEkCh2OMjy6sOEYr01qMXWTrBtmnAd
      S2nknXdN1G1YADlfiw0/F+HpBQmqvoOa52Btu4+K56R+RXZOwzjBcsNHP5ML0PQEW1G6RzXh
      yuYqooQBQv6mk3jaBFppVhApKoSpQrobrT585QPoRNioPEAQJoAA7m50ECUUnjPah5wzJ1jz
      2/O2JuXKBxg6PvUBMk5wTznBwwzRaSAruPiODakmgXHZySz1AbjyAeo+iBKKfpjkK7SI6g0K
      FCTANk1VKyBbxG9mfAAd8XFsI5d026nQS3ZGUAtGlGCp7iNUBfSANAOrntRiVd/JJOXytnZM
      GRZqXi7ZlWW0doNYBiKGpjKmDLYqnI8pgwDSmL8UAAPtXoSlhp/zc86v1LHRVgJgGKmDPMoH
      6Kk5vrvRRRRLv2wYrm3OlwAwprn0wxpAKA0w5EyxYh4giBJUXDvHHpwWlOoOwrvLIQCqi52K
      cGSjQFW1DVLFtdENYmTLV1MnVowIg6rCFsaFKoAfRGs0bcCxTCVsIscxGodsRVg/TNKGuVro
      u0oDAMBKs5IS6oaZqVyNSQvAcJVbL4jV1lb5NxFTDke9t1gJXkJZytdxLBO+Z/i3Hr4AABQD
      SURBVMF35Uern2l1uY71VgDflWZfojcEHMEF6qnEo9YA7oh9FiquPV8CQBmH71iFRBibpAHM
      fAuOMKZwHXNXGiBR4dbhsrlZoIU1GwXqK/46ADRrHjbbQdoWERjK9g59uzXPQS+UdORG1ZFx
      d/UR6poCR1GnxYT64SyyIWKtMZ+4sISvqYIdqQHGCEBmThkXqFWc1ATS0TqiaBg64TTMNE2S
      geaWeQKpAeJYh0ENNCouHNtM90sAgNWl2kADmDJaSMaYQL0wxuPnF3F3s4swpvBG7dhJ5i0T
      zLUPMGQCsdGbG2gfIMsHjxIGz7Z25QPIJJa5YzfiSWB8wMd3HQtBlKTkPABYrHtYb/XzApDJ
      Awx/vot1D1udUPW3N1MTChi0hXEsMy0YmmbT6GxZoM6cf+wDT+NPvvw6hBDoBQlqvhTYJ84v
      YXVZRp1k+5Z8vW7Nd/BHf/saPvv1a7n3pPc+8ByzoNHjUT4AUxrAkT5Ao+KmGWWDEFw+u4BL
      Z5qyFkBpgIEJVHzXvSDBo2cXsLbdlyZQRgPYygEmmDcBYBzeBBNoUh6A5zSAtSsN0Aki1HxH
      bTC3exNIc5Fc20QY0XQlA+QHvdbqwzIz3S0Un4VzXljBF+oetjpB2t77wqkGbqq9z0RGA8h6
      iXyCbRyyJpDuUt2seiBELip9lUsBgOff+SieurQMADi/0sDtDP9fmkAubjxo4drdrUGwQt2D
      EIKa7xYWNO3spj6AEBkfQJpAzZonM8pKw//8j74dpxYksU/7AJoKQUZQIXphrBqLyUx8dqup
      LCFurgSAaRMoV64ncvWzeeKVTqjI1UgIka7iU1gCBXT6shB9txog3fZTrVyOZSJMaI6Ps1jz
      sb7dz4QuJcbds+Y7aTTFMg08dWkFr9xYV/eTDqfWAIYhWZg7IVsXS/mgS7VmiSZK2wCDZroA
      8Ni5RVy9swVgQD158uIS/vXH34u17b4iIupNPwwQAPVKcUum1ARSPgAhUrPEycAEWlCd7HTC
      jBAZViYEst5AkeHGOcEDP0bSRLJOsOtY6AWJ7Mu042wdICgbFJRr6Jec3T3xf3/hFcQJQ8xY
      rm5WRwwIkX1iZtYAfdlRbhSR7vPfeBP3NsdvWQogJaJJG1iuzP1wYP8DckUfNoEAaecyIQom
      UMW1EUQ0FYDHzy/ijdubam4078aEYxmwTUORBidDagC5YGj/CpD+SasbKjOuuII8enYB1+9t
      A5Dmom2ZaFY9fN+VVXSDWCaWChrAKWh0He0hyqTSoe9ILV6+a2OpLlmslnKWAfnha0EwTSOt
      FjNGUCGyfkw4FAb1HAudIJJCuONsHSBG5QE0Rx5Qm6VxgS9+6wa2u+FQSn0QFwcAzECR1dAd
      FEb1zfn21Qe4vcO2q1kimmVIDdDqRTlCWs1z1G7t+Q/M1E1bh1SX68iGYJFqD7ncqKR7/crF
      Qff8l/QDZ5SzN4TU5FKhVT1np5oVrLX6yG7gl8XZpRrubfZymlZfz7ZM9KMk4wMYIARpi8os
      1lp9nGpWZFsrQlDx7DQK5NgWnnpkBf/w7z0LQNrreny+a8M0iGpyS9Dpx2nIe1QYVPsxuiBe
      w3MsdPoy6zxnAiBUFGh0/09CZG/3XhijpT4CnXQSXKTkMHlssb/QTtAaYFQ1UxAl6EygDAMD
      BxhA2pwqiBLU/YEAeK7MDQxrAM36HF53NT243Y/gOpJjtNysYG27D4G8zS81wHRZecMgiGKW
      BhEAYHmhgrVt+YGP0gDal4kSlvJrNBZqLjZaQSoApkkGPsDQYrK23cOphUoawam4NhLG02vq
      Yh4AaZgbgCL+DaJM290Qdd9JF8AseoHUAKZB0A+TnAkkBWAONQAb4QTrXVMA+dIo4wgiio1W
      Px8FEiIthgFUq5QR99hsB/juzY303y9de5Bu59NWPsAoDdALE7R36IyW1QAE0tY2CEEt05fH
      tU1UlArPwlZx7VG+i2dbaPWi9IO7cnEZr95cT8OgugLOssyR/P9RMAhBEOc/jFPNCm6vddSH
      PtqJalRcdPoR+hHNmXZnl+q48aA1ZAJhpAkUJywdp2GQlGiX1SrpvKhwKTDwd/T1tzohahU3
      R4fX6IWyO4XvWtjqhjkTSPckta150wAqC5tdMSRFRptAMvYbxlSpap7G3LmQm0brl6LDoMNa
      4DvX1/AXX3tD3o9x/NfPvIBPfvYlALqlhzOyqVM3iHcUAJZZOQWQZjCzGoAQgoWal4YJNSyr
      GC7UqPoONlpBGsm4cmkZr97YSP2jH3zrRXzsA8/ANg04U3Z8NghBGOVX8aWGj9vrnYmbc59d
      ruHuRjedK42VZgUPtnqpAGjBlCS0gUaXXZoHH7VpaBOIp4mwLHRSUeM//uKHYBqD9pG67cvw
      ew4iGfnxXRvbnTBnAvmuhXY/kv7jVLN1QNCVQtmHERnHULe29l0L61kBIIPa0qoWAELS6FAW
      vTBJa1tfv7WJt1xYxq21Nra7IQJVuJKlIOsx9MMErRk0wGOrCzLTSAhqQ0Upi3WvoAE8x0IQ
      JyNX3qWGjzsbnfRjXV2u495mN80c+64thco0YE/hAwBSOAOVNMyOa6PVx7nl+tjzzi3XcXej
      i04Q5wS7WXWx3urnBNAwCJyhxWRtu49TzepgUTOUCUSLZhWAlFaicXapBr2XcleNYVQiTPtH
      vmtLDWBnBcBGazcaIOy18frV67h+9TV8+yHVAwxXfukHAWTKuxvEuHSmifXtftoGUIfBelGS
      xq+B0QXlW50wXck/98Kb+OD3XsbpBVkQEkY0DbFJUyvBdjdM+xJNKhsEkIue/JMf+x4s1v2C
      BgCAhZpX8AF8VUg/CmeXqrh+bztdHWUnCKG6HA+Os2c0geROOoP5qnoO/tMv/gh+9kNvHXve
      6nINdzc66Pbzzn2j6mKj1U/Dp4Bc3YfbMN7b7OLsUnUwjowGGNX+RucBhqE1Ta3ijO0NSiBX
      +61OkBP0imtJE8g0Z6NDe9UGan4PUQzUfb7v9QByMwQiC7wVt1v+X9YBEADb3QCnmhVstAMY
      xAFRXHHGGLq9UG7No841CBAnNMdF32z30eqGaHcD3F5v4/LZZuoUhbGsL5AcfIovvXQTN+63
      8NMfeBoV10o59OOgOxikPH+hWpXbRu68hZoLg+RrGxxbvlDOGIZvcWaxijfvbcO2Bte2TIJe
      mIBzDkrl85mGzMBOUwNBiGw74jnmTDUTi3UPa9s9NKoOVpdq6bm+Y2KrE8I0B/f/Fx99F7a7
      QW7eHmx1sdTwM++IpPUX+nvKjscyZThveIxaJCqOJXvKDtUDcCE33vBsE1HMYGBQf+FYBlrd
      EBdPN2YTgF57C612G2fPnkVExb7XA3AB+K6D5WYFm50IpxerMJlIud7So6dYrPu4v9UDEwKu
      Y6vIB0E/pqhX3ZT3bZoGCMnzxLtBgogyfPPqA7zzyVXYtoV6xUUnSJQJYSkOPrC+HWC7G4EL
      gorvyMIOw8Cnv/AKPvK+pwr0DCZk2FLfz+AyqlXx3NwYTi1Uc/UAAFDxHFVJZRXKP88s1tSG
      Ek56jmNL5862rHSFdGwLbpb3PgGmaaAfUtR8d6rjNZabMgzbCxI0a356bqPmoaeiLfq3dz19
      Hl/45nXZo1T91g0SXDqzMHhHhoGK56hAhNwcJPv8jm0WaiT0s9qWPNcyDSAzn4PGCCaqvgPX
      kdfQlkTNd9EJYlm5N/WTA6g2FnHlyhU0m02c3ud6AN05wTQI3nJhCa/dkpGabJcDwyDoBDEa
      VTdtnaETLlwI3Frr4PzKwH4d1S2gHyVoVl28emMDTz+yIp/Ls7HdDdMsqt6R5M5GB+utftry
      nAvgyy/dwu9+7mW0R2wEnY1uAHKVdR2rEJv/4Xc8ive//VLuN9+xpDkzIvjSqLqo+XbOOXVs
      Q2VRB8fZppFqkp1gmyZavTBnMk4D05AFKBvtIGcCVT0HpkkKiTjLkv6U7vjX6kVoVDP7lRkE
      FdfK9UUaHueo+gbTJGn3vOGa4G4Qp3/zXbvgWM9lFOiX/8cX8GCrB9M08HQm3Z8lWBFC0OlH
      qHo2miruLNuCSAf09lob5zO7IerOARqMy8ZRS3UfN+630qZRVd/BdjdMX54uGNnqhLL5U6bf
      5e//31fwnmcvYKM14OVraG6SBiEE73/bpYIA6Hh2Fp5rYcz3D8s0sdKs5hzEqucUwrxGhnS3
      ExxbRlEq7uwbndQrLu5udNPudXKMhpwjaziMKReTl99cw2//+bfQ7kVoZgTAVJVz2e7YWegF
      bhimodtHFusUukGcBh581yoUw/iuSoTNSxSIC1nosd0NYBoEF880ceO+zLpqEhggH7TTl+G3
      xbqP7W4Ay5Sx9pjK9n7Zya24dq5aSTfY8j0bdze7Kc236tlY2+6lq6FlmggiCiHkHlwb7QBV
      z4bnWvjg917GlYvLuLshSWHdIFbbE2mWY35KP/K+p3as0AIA37HHVrIQIv2ArCDVKzLJk/84
      pidA2ZaJVnd2DQBIR/jmg1ZhZW1U3YIG0EnFN+5s4e5GB31Vr6Fh6Ewwk5vcDX/shjn6mQyD
      pDUWw5q+249T4RynAbgQsv54xmd/KOBMoNULEScsZVGaBlFtNQat0Q2V/q55DlaalbRDmGEQ
      bHejQitwTSTT0B9o3XdQ8werVdVzcG+ji8vnFgHIl9buRah4NhzLxP3NLqq+g5//8Nux3Kzg
      xasP8KpKpn3qr1/Gl1++hf/wC39fFnpMGYYcRqoBxgiBjioNns0trPb/4AeeGFn4MQqOZWK7
      G+1aAGQtbn6sjYqbiwIBgxYsdzc62GgHqKhKMw1ZO23J3qgoivA4jaZJdKkJlBGATpARAMcq
      zInONs+NBqBc7mQSJSxd1S6vLuDa3W1QxlLb3CAEnUC+tJVmJVWPBiG4dncLj57N+yXNqptL
      XrW6ERpVD42qi3PLtfT3mu/g3mY3tWkty8DdjS5WmhU0ax5ur3dQ9RycWarBMg2cXa7h3mYH
      rW6Ia/e28XMffjt+76+/k7IcdwNP+QDj1vDTi9Xc6qo1QBaLdX9qk+b0YhXrrT4WR7RP3wmr
      y3VUFCU5i6pv5zreAQMTaKMdpB2rsx+1aRjwVZWcfL78+WeXajmtrlGrOHji/BKAAUdMo5MJ
      0Tq2WdhbQvoG1vz4AN0gxmJd8tF1guipSyt45fp6wQTqBTF818JKs5J+bIQQvHlvG4+tLuau
      26i6ueTV/c1uOqGrmWSPNIH6qPtyoi3TwM0HLawu17HSrODlN9dQ9QcfVqPiot2Lcf1+C1cu
      LuMHnrmAu5tdvHFna+o4/DB8x4Lc8W+642t+UQBmwY+9+wn8xr/68ZRjPwuWG76qm8jff5Tw
      WaaBbj9K9zwA8paeToTdeNDC6lK9YAX+xHvegsfO5d8rIKvD/umPv0Neg+Sp5DJB5qp7kdz/
      NXzXnh8NsNUJ8JbzSyAg6Ut94sISXr+9mTOBQCRfZ6nhY1l1WQAGtaqXhnZDbAxpgDsbHawu
      1/Dc5dN439sGURhHmVx61bBNqQHOLdfwrqfO4fufPoenLq2kx/sqavHitQe4vLoIwyD4+PPP
      4o+//NquNYAew3BN8DjUK86e9vnV9PLdbCO71PDxM88/Wzj3Q+96HG9Rq7KGZRq4fr+F8yt1
      LDV8NCpu7jxTmUDdfoxHV4uRxXHb8GZ/f+LCEj779WvppiSd/sAJPrdSx8c+8HTh/LnSAFud
      EI+cXVAfgRxSveLmCkEAabd+/PlnZeG0bab2tkEIGlW30Aq8WfXQ7kWIE4ZPf+EV3NvsYnW5
      hjNLtZy5pMsX9WZyWuOcWarh3EodP/P8c7lrE0Lw5MUlfO6FN/GI2tX+sXOLeM+zF6bi44+C
      pZmcM2iAacofHwZMw8D3P32+8PuVi8uFbtSmaeD6vRYury5gpVnJhUABpM0DDIMUNPi0uLy6
      iB999xP4L7//VXAu0A2iNPvuWCa+98q5wjm+a8+eCX5Y2OqGOLVQURyZAUmq5jtYb/XTj+rn
      fvTtqTbwHAu/+i8/nF7j0plm4YPQJtA337iHT372RTxxfglLjaLKl+rZzGgAE55rjdxeSOOd
      T67iz/7fG6lgEELwCx/5vl1VogHSWbRUFdU0MA1jqk3rDhuW6rBxeXVR0qiHxmwYg7LH4e1c
      Z8EPPncR9za6+O0//1bKEp0Ex1IF97u+4z5iuxNgpVnBD7/j0TRkSAjBxdMNXL2zlTrBTiab
      RwhJ7e1m1cX733qpcN2qZ6MXxPj8N67j3U9fwJ31DhojuiWbpswoaiapZRpYqHlpW45RuLy6
      iJ9475M5m98yi/H9aWFNWc2l0ay6OTNuXmGZ0sk9t1LHkxeX8cyjp3J//74r52BZBj76visj
      e/dMC0IIPvaBpxUBz0yLYcZBUqixOw0Q9TvoxsDywu4lNotWN8JCzcNPf+CZ3O+XVxfxO3/x
      bXz4XY9PPP/MUg0fWqoVfrctE2utPhbrHv7RB9+KtVZvpD2pa3hTLrtlYFWxDsfBc6y0amk/
      oIVnWpu86jv4qR8q2rbzBsMgOLtUg2ObeOL8Uhq50fjo+58CAPzM88/t+V6EEPzjH3nbVMfa
      qriHiF0w2d58801wwfHY5cfAGNszF+jeRhcrC5UCtyaMKb71xn285cJSLgY+LSjj+MVf/Qw+
      /sHn8IHveQT3N3s4tzJaaG+ttXF+pQ5CZMH4g+1eLlL0sCGEwO31Di5kMtnHAfP6XHc3Oji1
      UN2lALzxXXRj4Lmnn9wXAXhYEELg1z71Ffyzn3hnLm1fooTGrgRA79NkGGSuBQAYdE4oUWIU
      diUAGpq/vdsPjHO+q1j2bj9q/aiznjvr/XbzXLsd217O3e087vb5DvI7mfZ+/x/0fvMQxb5c
      yAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='124' name='Running' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Running Grafico' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
